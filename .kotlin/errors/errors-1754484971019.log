kotlin version: 2.2.0
error message: java.lang.RuntimeException: Exception while generating code for:
FUN name:MarkdownText visibility:public modality:FINAL returnType:kotlin.Unit
  VALUE_PARAMETER kind:Regular name:markdown index:0 type:kotlin.String
  VALUE_PARAMETER kind:Regular name:modifier index:1 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER kind:Regular name:codeContent index:2 type:@[Composable] kotlin.Function2<kotlin.String, kotlin.String, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=@[Composable] kotlin.Function2<kotlin.String, kotlin.String, kotlin.Unit>
  VALUE_PARAMETER kind:Regular name:imageContent index:3 type:@[Composable] kotlin.Function1<kotlin.String, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=@[Composable] kotlin.Function1<kotlin.String, kotlin.Unit>
  VALUE_PARAMETER kind:Regular name:onImageClick index:4 type:kotlin.Function1<kotlin.String, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<kotlin.String, kotlin.Unit>
  VALUE_PARAMETER kind:Regular name:onClick index:5 type:kotlin.Function1<kotlin.String, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<kotlin.String, kotlin.Unit>
  VALUE_PARAMETER kind:Regular name:onLongClick index:6 type:kotlin.Function1<kotlin.String, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<kotlin.String, kotlin.Unit>
  VALUE_PARAMETER kind:Regular name:onLinkClick index:7 type:kotlin.Function1<kotlin.String, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<kotlin.String, kotlin.Unit>
  annotations:
    Composable
  BLOCK_BODY
    VAR name:parser type:com.adev.compose.markdowtext.markdown.MarkdownParser [val]
      CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in com.adev.compose.markdowtext.markdown.MarkdownParser' type=com.adev.compose.markdowtext.markdown.MarkdownParser origin=null
    VAR name:elements type:kotlin.collections.List<com.adev.compose.markdowtext.markdown.MarkdownElement> [val]
      CALL 'public final fun parse (markdown: kotlin.String): kotlin.collections.List<com.adev.compose.markdowtext.markdown.MarkdownElement> declared in com.adev.compose.markdowtext.markdown.MarkdownParser' type=kotlin.collections.List<com.adev.compose.markdowtext.markdown.MarkdownElement> origin=null
        ARG <this>: GET_VAR 'val parser: com.adev.compose.markdowtext.markdown.MarkdownParser [val] declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt.MarkdownText' type=com.adev.compose.markdowtext.markdown.MarkdownParser origin=null
        ARG markdown: GET_VAR 'markdown: kotlin.String declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt.MarkdownText' type=kotlin.String origin=null
    CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      ARG modifier: CALL 'public final fun padding-3ABfNKs ($this$padding: androidx.compose.ui.Modifier, all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
        ARG $this$padding: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt.MarkdownText' type=androidx.compose.ui.Modifier origin=null
        ARG all: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=16
      ARG verticalArrangement: CALL 'public final fun spacedBy-0680j_4 (space: androidx.compose.ui.unit.Dp): androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=null
        ARG <this>: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.foundation.layout.Arrangement visibility:public [final,static] declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement origin=null
        ARG space: CALL 'public final fun <get-dp> (<this>: kotlin.Int): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          ARG <this>: CONST Int type=kotlin.Int value=8
      ARG horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
      ARG content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun MarkdownText$lambda$7 ($this$Column: androidx.compose.foundation.layout.ColumnScope, $elements: kotlin.collections.List<com.adev.compose.markdowtext.markdown.MarkdownElement>, $onLinkClick: kotlin.Function1<kotlin.String, kotlin.Unit>, $imageContent: @[Composable] kotlin.Function1<kotlin.String, kotlin.Unit>): kotlin.Unit declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          ARG $elements: GET_VAR 'val elements: kotlin.collections.List<com.adev.compose.markdowtext.markdown.MarkdownElement> [val] declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt.MarkdownText' type=kotlin.collections.List<com.adev.compose.markdowtext.markdown.MarkdownElement> origin=null
          ARG $onLinkClick: GET_VAR 'onLinkClick: kotlin.Function1<kotlin.String, kotlin.Unit> declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt.MarkdownText' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=null
          ARG $imageContent: GET_VAR 'imageContent: @[Composable] kotlin.Function1<kotlin.String, kotlin.Unit> declared in com.adev.compose.markdowtext.markdown.MarkdownTextKt.MarkdownText' type=@[Composable] kotlin.Function1<kotlin.String, kotlin.Unit> origin=null
      ARG $mask0: CONST Int type=kotlin.Int value=4
      ARG $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:439)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:164)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile(JvmIrCodegenFactory.kt:419)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:388)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:432)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:95)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:36)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:29)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:102)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:22)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:53)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:109)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:68)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:78)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:44)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:90)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:352)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:175)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:38)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:504)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:421)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:306)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:133)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:679)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:93)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1806)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:82)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:586)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:527)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:532)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:233)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:126)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	... 47 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/ColumnKt;.Column$default(Landroidx/compose/ui/Modifier;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/ui/Alignment$Horizontal;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction$lambda$2(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.codegen.inline.InlineCache.computeMethodBytes(InlineCache.kt:90)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:93)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:65)
	... 58 more


